package "subsequence-matcher"
version "0.2.0"
usage "subsequence-matcher [OPTIONS] query"
versiontext "Created by Kovid Goyal"
description "\
Filter a newline separated list of strings from STDIN to STDOUT based on the query. \
Does subsequence matching of the query and returns the results sorted by relevance.

Subsequence matching has configurable \"special characters\". If a matched \
character occurs immediately after one of these, it's score is higher. For
more details on the algorithm, see https://github.com/kovidgoyal/subseq-matcher

STDIN must be UTF-8 encoded and STDOUT will also be UTF-8 encoded.  The query
string must also be UTF-8 encoded. If you want to process string in another
encoding, pipe them through iconv or similar.

"

section "Control operation"

option "delimiter" d "The character at which to split the input into lines. Defaults to the new line character."
    string 

option "threads" t "Number of worker threads to use. Default is to use the number of available CPUs"
    int default="0" 

section "Control scoring"

option "level1" 1 "The level 1 special characters."
	string default="/" 

option "level2" 2 "The level 2 special characters."
	string default="-_ 0123456789" 

option "level3" 3 "The level 3 special characters."
	string default="." 

section "Control output"

option "limit" l "Limit the number of returned results."
	int default="0" 

option "mark-before" b "String to output before each matched character"
    string 

option "mark-after" a "String to output after each matched character"
    string 

option "positions" p "Output match positions in the form <number>,<number>,...: before each result" flag off
